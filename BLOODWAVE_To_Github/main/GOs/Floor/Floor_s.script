function init(self)
	self.pos = go.get_position()
	self.speed = 0.5
	self.respawned = false
	local map = msg.url("#Floor_Tiles_tm")
	for x = 2, 15 do
		for y = 1, 20 do
			local ran = math.random(1,12)
			tilemap.set_tile(map, "layer1", x, y, ran)
		end
	end
	--[[for y = 1, 20 do
		tilemap.set_tile(map, "layer2", 1, y, 15)
		tilemap.set_tile(map, "layer2", 16, y, 15)
	end]]
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	self.pos.y = self.pos.y - self.speed*G_SPEED
	go.set_position(self.pos)
	if self.pos.y < -320 then
		go.delete()
	end
	if go.get_position().y <= 0 then
		if self.respawned == false then
		--	msg.post("/Controller", "spawn_floor", { y = go.get_position().y } )
			self.respawned = true
		end
	end
end

function on_message(self, message_id, message, sender)
	if message.other_group == hash("Player_Sides") then pprint(message) end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
